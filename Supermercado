import javax.swing.*;
import java.util.Random;
import java.util.concurrent.atomic.AtomicInteger;

// Enum para simular tipos de productos
enum Producto {
    FRUTAS, VEGETALES, CARNES, LACTEOS, PAN
}

// Clase Cajero implementando Runnable para crear hilos
class Cajero implements Runnable {
    private String nombre;
    private AtomicInteger clientesAtendidos;
    private AtomicInteger totalVentas;

    public Cajero(String nombre, AtomicInteger totalVentas) {
        this.nombre = nombre;
        this.clientesAtendidos = new AtomicInteger(0);
        this.totalVentas = totalVentas;
    }

    @Override
    public void run() {
        Random random = new Random();
        while (true) { // Simulando que la caja siempre está atendiendo clientes
            try {
                int tiempoProceso = random.nextInt(5000); // Simulamos el tiempo de atención
                Thread.sleep(tiempoProceso);
                
                int costoCompra = random.nextInt(100); // Simulamos el total de la compra
                totalVentas.addAndGet(costoCompra);
                clientesAtendidos.incrementAndGet();
                
                System.out.println(nombre + " atendió a un cliente. Total ventas: " + totalVentas.get());
            } catch (InterruptedException e) {
                System.out.println(nombre + " dejó de trabajar.");
                break;
            }
        }
    }

    public int getClientesAtendidos() {
        return clientesAtendidos.get();
    }
}

// Clase principal para manejar la simulación
public class Supermercado {
    private static AtomicInteger totalVentas = new AtomicInteger(0);

    public static void main(String[] args) {
        String[] opciones = {"Iniciar Simulación", "Ver Resultados", "Salir"};
        Cajero cajero1 = new Cajero("Cajero 1", totalVentas);
        Cajero cajero2 = new Cajero("Cajero 2", totalVentas);

        Thread hilo1 = new Thread(cajero1);
        Thread hilo2 = new Thread(cajero2);
        
        boolean ejecutando = true;
        while (ejecutando) {
            int seleccion = JOptionPane.showOptionDialog(null, "Menú Principal", "Supermercado", 
                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opciones, opciones[0]);

            switch (seleccion) {
                case 0: // Iniciar simulación
                    if (!hilo1.isAlive() && !hilo2.isAlive()) {
                        hilo1.start();
                        hilo2.start();
                    }
                    break;
                case 1: // Ver resultados
                    JOptionPane.showMessageDialog(null, "Total ventas: " + totalVentas.get() + 
                        "\nCajero 1 atendió: " + cajero1.getClientesAtendidos() + 
                        "\nCajero 2 atendió: " + cajero2.getClientesAtendidos());
                    break;
                case 2: // Salir
                    hilo1.interrupt();
                    hilo2.interrupt();
                    ejecutando = false;
                    break;
            }
        }
    }
}
